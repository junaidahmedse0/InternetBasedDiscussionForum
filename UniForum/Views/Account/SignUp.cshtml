@model UniForum.ViewModel.UserViewModel


@{
    ViewBag.Title = "SignUp";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            
            <div class="row">
                <div class="col-sm-4 col-sm-offset-3">
                    <h2>SignUp</h2>
                </div>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissible close" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })




                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })


                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })


                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password,"", new { @class = "text-danger" })




                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })




                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                           
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserRole.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @if (User.IsInRole("admin"))
                            {
                                @Html.DropDownListFor(model => model.UserRole.Roles, new List<SelectListItem>
                           {

                                  new SelectListItem() { Text = "Teacher", Value = "Teacher" },




                          }, new { @class = "form-control col-md-2" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.UserRole.Roles, new List<SelectListItem>
                           {

                                  new SelectListItem() { Text = "Student", Value = "Student" },
                                  new SelectListItem() { Text = "Alumni", Value = "Alumni" }



                          }, new { @class = "form-control col-md-2" })
                            }



                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="SignUp" class="btn btn-default"  />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to Login", "Login")
            </div>


        </div>

    </div>


</div>
@section scripts
  {

    @Scripts.Render("~/bundles/jqueryval")  }